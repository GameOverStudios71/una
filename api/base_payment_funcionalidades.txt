Mapeamento do Módulo Base Payment para API RESTful

Descrição Geral:
O módulo base 'payment' parece ser uma biblioteca de classes fundamentais no sistema UNA relacionada ao gerenciamento de pagamentos. Provavelmente fornece funcionalidades para processamento de pagamentos, gerenciamento de carrinhos de compra, faturas e integrações com gateways de pagamento. Este é um módulo base localizado em modules/base/payment, contendo classes reutilizáveis por outros módulos.

Nota: Como se trata de um módulo base, as classes aqui podem não ter funcionalidades específicas para endpoints de API diretamente, mas sim fornecer suporte para outros módulos. O mapeamento para rotas RESTful será feito apenas se houver funcionalidades específicas que possam ser expostas.

Análise de Classes do Módulo Base Payment:

1. BxBaseModPaymentCart.php:
   - BxBaseModPaymentCart extends BxDol: Classe base para gerenciamento de carrinho de compras.
   - __construct(&$oModule): Construtor que inicializa o carrinho.
   - addItem($iItemId, $iQuantity): Método para adicionar itens ao carrinho.
   - removeItem($iItemId): Método para remover itens do carrinho.
   - getItems($iUserId): Método para obter itens no carrinho.

2. BxBaseModPaymentCommissions.php:
   - BxBaseModPaymentCommissions extends BxDol: Classe para gerenciamento de comissões em pagamentos.
   - __construct(&$oModule): Construtor que inicializa o gerenciamento de comissões.

3. BxBaseModPaymentConfig.php:
   - BxBaseModPaymentConfig extends BxBaseModGeneralConfig: Configurações base para o módulo de pagamentos.
   - __construct($aModule): Construtor que inicializa as configurações.

4. BxBaseModPaymentDb.php:
   - BxBaseModPaymentDb extends BxBaseModGeneralDb: Banco de dados base para o módulo de pagamentos.
   - __construct(&$oConfig): Construtor que inicializa o banco de dados.

5. BxBaseModPaymentDetails.php:
   - BxBaseModPaymentDetails extends BxDol: Classe para detalhes de pagamentos.
   - __construct(&$oModule): Construtor que inicializa os detalhes de pagamento.

6. BxBaseModPaymentGridCarts.php:
   - BxBaseModPaymentGridCarts extends BxTemplGrid: Classe para grid de carrinhos de compras.
   - __construct($aOptions, $oTemplate = false): Construtor que inicializa o grid de carrinhos.

7. BxBaseModPaymentGridCommissions.php:
   - BxBaseModPaymentGridCommissions extends BxTemplGrid: Classe para grid de comissões em pagamentos.
   - __construct($aOptions, $oTemplate = false): Construtor que inicializa o grid de comissões.

8. BxBaseModPaymentGridInvoices.php:
   - BxBaseModPaymentGridInvoices extends BxTemplGrid: Classe base para grid de faturas.
   - __construct($aOptions, $oTemplate = false): Construtor que inicializa o grid de faturas.

9. BxBaseModPaymentGridOrders.php:
   - BxBaseModPaymentGridOrders extends BxBaseModPaymentGridTransactions: Classe para grid de pedidos em pagamentos.
   - __construct($aOptions, $oTemplate = false): Construtor que inicializa o grid de pedidos.

10. BxBaseModPaymentGridProviders.php:
    - BxBaseModPaymentGridProviders extends BxTemplGrid: Classe para grid de provedores de pagamento.
    - __construct($aOptions, $oTemplate = false): Construtor que inicializa o grid de provedores.

11. BxBaseModPaymentGridTransactions.php:
    - BxBaseModPaymentGridTransactions extends BxTemplGrid: Classe para grid de transações em pagamentos.
    - __construct($aOptions, $oTemplate = false): Construtor que inicializa o grid de transações.

12. BxBaseModPaymentInstaller.php:
    - BxBaseModPaymentInstaller extends BxBaseModGeneralInstaller: Classe para instalação do módulo de pagamentos.
    - __construct($aConfig): Construtor que inicializa o instalador.

13. BxBaseModPaymentJoin.php:
    - BxBaseModPaymentJoin extends BxDol: Classe para junção de pagamentos (possivelmente para associações ou integrações).
    - __construct(&$oModule): Construtor que inicializa a junção de pagamentos.

14. BxBaseModPaymentModule.php:
    - BxBaseModPaymentModule extends BxBaseModGeneralModule: Classe principal base para gerenciar a lógica de pagamentos.
    - __construct(&$aModule): Construtor que inicializa o módulo.
    - serviceProcessPayment($aParams): Método base para processar um pagamento.
    - serviceGetCartItems($iUserId): Método base para obter itens no carrinho de um usuário.
    - serviceAddToCart($iItemId, $iQuantity): Método base para adicionar itens ao carrinho.
    - serviceRemoveFromCart($iItemId): Método base para remover itens do carrinho.
    - serviceGetInvoices($iUserId): Método base para obter faturas de um usuário.

15. BxBaseModPaymentOrders.php:
    - BxBaseModPaymentOrders extends BxDol: Classe para gerenciamento de pedidos em pagamentos.
    - __construct(&$oModule): Construtor que inicializa o gerenciamento de pedidos.

16. BxBaseModPaymentProvider.php:
    - BxBaseModPaymentProvider extends BxDol: Classe base para provedores de pagamento.
    - __construct(&$oModule): Construtor que inicializa o provedor de pagamento.

17. BxBaseModPaymentPage.php:
    - BxBaseModPaymentPage extends BxTemplPage: Classe para página de pagamentos.
    - __construct($sPage, $oModule): Construtor que inicializa a página de pagamentos.

18. BxBaseModPaymentSubscriptions.php:
    - BxBaseModPaymentSubscriptions extends BxDol: Classe para gerenciamento de assinaturas em pagamentos.
    - __construct(&$oModule): Construtor que inicializa o gerenciamento de assinaturas.

19. BxBaseModPaymentTemplate.php:
    - BxBaseModPaymentTemplate extends BxBaseModGeneralTemplate: Template base para renderização de elementos de pagamentos.
    - __construct(&$oConfig, &$oDb): Construtor que inicializa o template.

Mapeamento para Rotas RESTful (Baseado em Todas as Funcionalidades):
- POST /api/base/payment/process: Processa um pagamento (base).
- GET /api/base/payment/cart/{userId}: Obtém itens no carrinho de um usuário (base).
- POST /api/base/payment/cart/add: Adiciona itens ao carrinho (base).
- DELETE /api/base/payment/cart/remove/{itemId}: Remove itens do carrinho (base).
- GET /api/base/payment/invoices/{userId}: Obtém faturas de um usuário (base).

Nota: As rotas acima são definidas como base e podem ser estendidas ou substituídas por módulos específicos que utilizem essas classes.
